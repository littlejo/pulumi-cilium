// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Hubble resource for Cilium. This is equivalent to cilium cli: `cilium hubble`: It manages cilium hubble
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cilium from "@littlejo/cilium";
 *
 * const example = new cilium.Hubble("example", {ui: true});
 * ```
 */
export class Hubble extends pulumi.CustomResource {
    /**
     * Get an existing Hubble resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HubbleState, opts?: pulumi.CustomResourceOptions): Hubble {
        return new Hubble(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cilium:index/hubble:Hubble';

    /**
     * Returns true if the given object is an instance of Hubble.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hubble {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hubble.__pulumiType;
    }

    /**
     * Namespace in which to install (Default: `kube-system`).
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * Deploy Hubble Relay (Default: `true`).
     */
    public readonly relay!: pulumi.Output<boolean>;
    /**
     * Enable Hubble UI (Default: `false`).
     */
    public readonly ui!: pulumi.Output<boolean>;

    /**
     * Create a Hubble resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HubbleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HubbleArgs | HubbleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HubbleState | undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["relay"] = state ? state.relay : undefined;
            resourceInputs["ui"] = state ? state.ui : undefined;
        } else {
            const args = argsOrState as HubbleArgs | undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["relay"] = args ? args.relay : undefined;
            resourceInputs["ui"] = args ? args.ui : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hubble.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hubble resources.
 */
export interface HubbleState {
    /**
     * Namespace in which to install (Default: `kube-system`).
     */
    namespace?: pulumi.Input<string>;
    /**
     * Deploy Hubble Relay (Default: `true`).
     */
    relay?: pulumi.Input<boolean>;
    /**
     * Enable Hubble UI (Default: `false`).
     */
    ui?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Hubble resource.
 */
export interface HubbleArgs {
    /**
     * Namespace in which to install (Default: `kube-system`).
     */
    namespace?: pulumi.Input<string>;
    /**
     * Deploy Hubble Relay (Default: `true`).
     */
    relay?: pulumi.Input<boolean>;
    /**
     * Enable Hubble UI (Default: `false`).
     */
    ui?: pulumi.Input<boolean>;
}
