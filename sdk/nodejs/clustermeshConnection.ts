// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ClustermeshConnection extends pulumi.CustomResource {
    /**
     * Get an existing ClustermeshConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClustermeshConnectionState, opts?: pulumi.CustomResourceOptions): ClustermeshConnection {
        return new ClustermeshConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cilium:index/clustermeshConnection:ClustermeshConnection';

    /**
     * Returns true if the given object is an instance of ClustermeshConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClustermeshConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClustermeshConnection.__pulumiType;
    }

    /**
     * Connection Mode { `unicast` | `bidirectional` | `mesh` } (Default: `bidirectional`).
     */
    public readonly connectionMode!: pulumi.Output<string>;
    /**
     * Kubernetes configuration contexts of destination clusters
     */
    public readonly destinationContexts!: pulumi.Output<string[]>;
    /**
     * Number of parallel connections of destination clusters (Default: `1`).
     */
    public readonly parallel!: pulumi.Output<number>;

    /**
     * Create a ClustermeshConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ClustermeshConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClustermeshConnectionArgs | ClustermeshConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClustermeshConnectionState | undefined;
            resourceInputs["connectionMode"] = state ? state.connectionMode : undefined;
            resourceInputs["destinationContexts"] = state ? state.destinationContexts : undefined;
            resourceInputs["parallel"] = state ? state.parallel : undefined;
        } else {
            const args = argsOrState as ClustermeshConnectionArgs | undefined;
            resourceInputs["connectionMode"] = args ? args.connectionMode : undefined;
            resourceInputs["destinationContexts"] = args ? args.destinationContexts : undefined;
            resourceInputs["parallel"] = args ? args.parallel : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClustermeshConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClustermeshConnection resources.
 */
export interface ClustermeshConnectionState {
    /**
     * Connection Mode { `unicast` | `bidirectional` | `mesh` } (Default: `bidirectional`).
     */
    connectionMode?: pulumi.Input<string>;
    /**
     * Kubernetes configuration contexts of destination clusters
     */
    destinationContexts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of parallel connections of destination clusters (Default: `1`).
     */
    parallel?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ClustermeshConnection resource.
 */
export interface ClustermeshConnectionArgs {
    /**
     * Connection Mode { `unicast` | `bidirectional` | `mesh` } (Default: `bidirectional`).
     */
    connectionMode?: pulumi.Input<string>;
    /**
     * Kubernetes configuration contexts of destination clusters
     */
    destinationContexts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of parallel connections of destination clusters (Default: `1`).
     */
    parallel?: pulumi.Input<number>;
}
