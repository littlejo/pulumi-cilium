// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Deploy extends pulumi.CustomResource {
    /**
     * Get an existing Deploy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeployState, opts?: pulumi.CustomResourceOptions): Deploy {
        return new Deploy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cilium:index/deploy:Deploy';

    /**
     * Returns true if the given object is an instance of Deploy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deploy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deploy.__pulumiType;
    }

    /**
     * Datapath mode to use { tunnel | native | aws-eni | gke | azure | aks-byocni } (Default: `autodetected`).
     */
    public readonly dataPath!: pulumi.Output<string>;
    /**
     * Helm values (`helm get values -n kube-system cilium`)
     */
    public /*out*/ readonly helmValues!: pulumi.Output<string>;
    /**
     * Helm chart repository to download Cilium charts from (Default: `https://helm.cilium.io`).
     */
    public readonly repository!: pulumi.Output<string>;
    /**
     * When upgrading, reset the helm values to the ones built into the chart (Default: `false`).
     */
    public readonly reset!: pulumi.Output<boolean>;
    /**
     * When upgrading, reuse the helm values from the latest release unless any overrides from are set from other flags. This
     * option takes precedence over HelmResetValues (Default: `true`).
     */
    public readonly reuse!: pulumi.Output<boolean>;
    /**
     * Set helm values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2 (Default:
     * `[]`).
     */
    public readonly sets!: pulumi.Output<string[]>;
    /**
     * values in raw yaml to pass to helm. (Default: `empty`).
     */
    public readonly values!: pulumi.Output<string>;
    /**
     * Version of Cilium (Default: `v1.15.5`).
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * Wait for Cilium status is ok (Default: `true`).
     */
    public readonly wait!: pulumi.Output<boolean>;

    /**
     * Create a Deploy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DeployArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeployArgs | DeployState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeployState | undefined;
            resourceInputs["dataPath"] = state ? state.dataPath : undefined;
            resourceInputs["helmValues"] = state ? state.helmValues : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["reset"] = state ? state.reset : undefined;
            resourceInputs["reuse"] = state ? state.reuse : undefined;
            resourceInputs["sets"] = state ? state.sets : undefined;
            resourceInputs["values"] = state ? state.values : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["wait"] = state ? state.wait : undefined;
        } else {
            const args = argsOrState as DeployArgs | undefined;
            resourceInputs["dataPath"] = args ? args.dataPath : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["reset"] = args ? args.reset : undefined;
            resourceInputs["reuse"] = args ? args.reuse : undefined;
            resourceInputs["sets"] = args ? args.sets : undefined;
            resourceInputs["values"] = args ? args.values : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["wait"] = args ? args.wait : undefined;
            resourceInputs["helmValues"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deploy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Deploy resources.
 */
export interface DeployState {
    /**
     * Datapath mode to use { tunnel | native | aws-eni | gke | azure | aks-byocni } (Default: `autodetected`).
     */
    dataPath?: pulumi.Input<string>;
    /**
     * Helm values (`helm get values -n kube-system cilium`)
     */
    helmValues?: pulumi.Input<string>;
    /**
     * Helm chart repository to download Cilium charts from (Default: `https://helm.cilium.io`).
     */
    repository?: pulumi.Input<string>;
    /**
     * When upgrading, reset the helm values to the ones built into the chart (Default: `false`).
     */
    reset?: pulumi.Input<boolean>;
    /**
     * When upgrading, reuse the helm values from the latest release unless any overrides from are set from other flags. This
     * option takes precedence over HelmResetValues (Default: `true`).
     */
    reuse?: pulumi.Input<boolean>;
    /**
     * Set helm values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2 (Default:
     * `[]`).
     */
    sets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * values in raw yaml to pass to helm. (Default: `empty`).
     */
    values?: pulumi.Input<string>;
    /**
     * Version of Cilium (Default: `v1.15.5`).
     */
    version?: pulumi.Input<string>;
    /**
     * Wait for Cilium status is ok (Default: `true`).
     */
    wait?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Deploy resource.
 */
export interface DeployArgs {
    /**
     * Datapath mode to use { tunnel | native | aws-eni | gke | azure | aks-byocni } (Default: `autodetected`).
     */
    dataPath?: pulumi.Input<string>;
    /**
     * Helm chart repository to download Cilium charts from (Default: `https://helm.cilium.io`).
     */
    repository?: pulumi.Input<string>;
    /**
     * When upgrading, reset the helm values to the ones built into the chart (Default: `false`).
     */
    reset?: pulumi.Input<boolean>;
    /**
     * When upgrading, reuse the helm values from the latest release unless any overrides from are set from other flags. This
     * option takes precedence over HelmResetValues (Default: `true`).
     */
    reuse?: pulumi.Input<boolean>;
    /**
     * Set helm values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2 (Default:
     * `[]`).
     */
    sets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * values in raw yaml to pass to helm. (Default: `empty`).
     */
    values?: pulumi.Input<string>;
    /**
     * Version of Cilium (Default: `v1.15.5`).
     */
    version?: pulumi.Input<string>;
    /**
     * Wait for Cilium status is ok (Default: `true`).
     */
    wait?: pulumi.Input<boolean>;
}
