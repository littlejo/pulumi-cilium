// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cilium

import (
	"context"
	"reflect"

	"github.com/littlejo/pulumi-cilium/sdk/go/cilium/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstallCa struct {
	Crt string `pulumi:"crt"`
	Key string `pulumi:"key"`
}

// InstallCaInput is an input type that accepts InstallCaArgs and InstallCaOutput values.
// You can construct a concrete instance of `InstallCaInput` via:
//
//	InstallCaArgs{...}
type InstallCaInput interface {
	pulumi.Input

	ToInstallCaOutput() InstallCaOutput
	ToInstallCaOutputWithContext(context.Context) InstallCaOutput
}

type InstallCaArgs struct {
	Crt pulumi.StringInput `pulumi:"crt"`
	Key pulumi.StringInput `pulumi:"key"`
}

func (InstallCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstallCa)(nil)).Elem()
}

func (i InstallCaArgs) ToInstallCaOutput() InstallCaOutput {
	return i.ToInstallCaOutputWithContext(context.Background())
}

func (i InstallCaArgs) ToInstallCaOutputWithContext(ctx context.Context) InstallCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstallCaOutput)
}

func (i InstallCaArgs) ToInstallCaPtrOutput() InstallCaPtrOutput {
	return i.ToInstallCaPtrOutputWithContext(context.Background())
}

func (i InstallCaArgs) ToInstallCaPtrOutputWithContext(ctx context.Context) InstallCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstallCaOutput).ToInstallCaPtrOutputWithContext(ctx)
}

// InstallCaPtrInput is an input type that accepts InstallCaArgs, InstallCaPtr and InstallCaPtrOutput values.
// You can construct a concrete instance of `InstallCaPtrInput` via:
//
//	        InstallCaArgs{...}
//
//	or:
//
//	        nil
type InstallCaPtrInput interface {
	pulumi.Input

	ToInstallCaPtrOutput() InstallCaPtrOutput
	ToInstallCaPtrOutputWithContext(context.Context) InstallCaPtrOutput
}

type installCaPtrType InstallCaArgs

func InstallCaPtr(v *InstallCaArgs) InstallCaPtrInput {
	return (*installCaPtrType)(v)
}

func (*installCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstallCa)(nil)).Elem()
}

func (i *installCaPtrType) ToInstallCaPtrOutput() InstallCaPtrOutput {
	return i.ToInstallCaPtrOutputWithContext(context.Background())
}

func (i *installCaPtrType) ToInstallCaPtrOutputWithContext(ctx context.Context) InstallCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstallCaPtrOutput)
}

type InstallCaOutput struct{ *pulumi.OutputState }

func (InstallCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstallCa)(nil)).Elem()
}

func (o InstallCaOutput) ToInstallCaOutput() InstallCaOutput {
	return o
}

func (o InstallCaOutput) ToInstallCaOutputWithContext(ctx context.Context) InstallCaOutput {
	return o
}

func (o InstallCaOutput) ToInstallCaPtrOutput() InstallCaPtrOutput {
	return o.ToInstallCaPtrOutputWithContext(context.Background())
}

func (o InstallCaOutput) ToInstallCaPtrOutputWithContext(ctx context.Context) InstallCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstallCa) *InstallCa {
		return &v
	}).(InstallCaPtrOutput)
}

func (o InstallCaOutput) Crt() pulumi.StringOutput {
	return o.ApplyT(func(v InstallCa) string { return v.Crt }).(pulumi.StringOutput)
}

func (o InstallCaOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstallCa) string { return v.Key }).(pulumi.StringOutput)
}

type InstallCaPtrOutput struct{ *pulumi.OutputState }

func (InstallCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstallCa)(nil)).Elem()
}

func (o InstallCaPtrOutput) ToInstallCaPtrOutput() InstallCaPtrOutput {
	return o
}

func (o InstallCaPtrOutput) ToInstallCaPtrOutputWithContext(ctx context.Context) InstallCaPtrOutput {
	return o
}

func (o InstallCaPtrOutput) Elem() InstallCaOutput {
	return o.ApplyT(func(v *InstallCa) InstallCa {
		if v != nil {
			return *v
		}
		var ret InstallCa
		return ret
	}).(InstallCaOutput)
}

func (o InstallCaPtrOutput) Crt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstallCa) *string {
		if v == nil {
			return nil
		}
		return &v.Crt
	}).(pulumi.StringPtrOutput)
}

func (o InstallCaPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstallCa) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstallCaInput)(nil)).Elem(), InstallCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstallCaPtrInput)(nil)).Elem(), InstallCaArgs{})
	pulumi.RegisterOutputType(InstallCaOutput{})
	pulumi.RegisterOutputType(InstallCaPtrOutput{})
}
