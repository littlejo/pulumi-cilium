// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cilium

import (
	"context"
	"reflect"

	"github.com/littlejo/pulumi-cilium/sdk/go/cilium/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Helm values of cilium
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/littlejo/pulumi-cilium/sdk/go/cilium"
//	"github.com/pulumi/pulumi-local/sdk/go/local"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleHelmValues, err := cilium.GetHelmValues(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = local.NewFile(ctx, "exampleFile", &local.FileArgs{
//				Content:  *pulumi.String(exampleHelmValues.Yaml),
//				Filename: pulumi.String(fmt.Sprintf("%v/values.yaml", path.Module)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetHelmValues(ctx *pulumi.Context, args *GetHelmValuesArgs, opts ...pulumi.InvokeOption) (*GetHelmValuesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHelmValuesResult
	err := ctx.Invoke("cilium:index/getHelmValues:getHelmValues", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHelmValues.
type GetHelmValuesArgs struct {
	// Namespace of cilium (Default: `kube-system`).
	Namespace *string `pulumi:"namespace"`
	// Helm release (Default: `Install`).
	Release *string `pulumi:"release"`
}

// A collection of values returned by getHelmValues.
type GetHelmValuesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Namespace of cilium (Default: `kube-system`).
	Namespace *string `pulumi:"namespace"`
	// Helm release (Default: `Install`).
	Release *string `pulumi:"release"`
	// Yaml output
	Yaml string `pulumi:"yaml"`
}

func GetHelmValuesOutput(ctx *pulumi.Context, args GetHelmValuesOutputArgs, opts ...pulumi.InvokeOption) GetHelmValuesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHelmValuesResult, error) {
			args := v.(GetHelmValuesArgs)
			r, err := GetHelmValues(ctx, &args, opts...)
			var s GetHelmValuesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHelmValuesResultOutput)
}

// A collection of arguments for invoking getHelmValues.
type GetHelmValuesOutputArgs struct {
	// Namespace of cilium (Default: `kube-system`).
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Helm release (Default: `Install`).
	Release pulumi.StringPtrInput `pulumi:"release"`
}

func (GetHelmValuesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmValuesArgs)(nil)).Elem()
}

// A collection of values returned by getHelmValues.
type GetHelmValuesResultOutput struct{ *pulumi.OutputState }

func (GetHelmValuesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmValuesResult)(nil)).Elem()
}

func (o GetHelmValuesResultOutput) ToGetHelmValuesResultOutput() GetHelmValuesResultOutput {
	return o
}

func (o GetHelmValuesResultOutput) ToGetHelmValuesResultOutputWithContext(ctx context.Context) GetHelmValuesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetHelmValuesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmValuesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Namespace of cilium (Default: `kube-system`).
func (o GetHelmValuesResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHelmValuesResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Helm release (Default: `Install`).
func (o GetHelmValuesResultOutput) Release() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHelmValuesResult) *string { return v.Release }).(pulumi.StringPtrOutput)
}

// Yaml output
func (o GetHelmValuesResultOutput) Yaml() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmValuesResult) string { return v.Yaml }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHelmValuesResultOutput{})
}
