// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cilium

import (
	"context"
	"reflect"

	"github.com/littlejo/pulumi-cilium/sdk/go/cilium/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Disable Kube-Proxy DaemonSet, equivalent to: `kubectl -n kube-system patch daemonset kube-proxy -p '"spec": {"template": {"spec": {"nodeSelector": {"non-existing": "true"}}}}'`.
type KubeproxyFree struct {
	pulumi.CustomResourceState

	// Name of DaemonSet (Default: `kube-proxy`).
	Name pulumi.StringOutput `pulumi:"name"`
	// Namespace in which to install (Default: `kube-system`).
	Namespace pulumi.StringOutput `pulumi:"namespace"`
}

// NewKubeproxyFree registers a new resource with the given unique name, arguments, and options.
func NewKubeproxyFree(ctx *pulumi.Context,
	name string, args *KubeproxyFreeArgs, opts ...pulumi.ResourceOption) (*KubeproxyFree, error) {
	if args == nil {
		args = &KubeproxyFreeArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubeproxyFree
	err := ctx.RegisterResource("cilium:index/kubeproxyFree:KubeproxyFree", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubeproxyFree gets an existing KubeproxyFree resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubeproxyFree(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubeproxyFreeState, opts ...pulumi.ResourceOption) (*KubeproxyFree, error) {
	var resource KubeproxyFree
	err := ctx.ReadResource("cilium:index/kubeproxyFree:KubeproxyFree", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubeproxyFree resources.
type kubeproxyFreeState struct {
	// Name of DaemonSet (Default: `kube-proxy`).
	Name *string `pulumi:"name"`
	// Namespace in which to install (Default: `kube-system`).
	Namespace *string `pulumi:"namespace"`
}

type KubeproxyFreeState struct {
	// Name of DaemonSet (Default: `kube-proxy`).
	Name pulumi.StringPtrInput
	// Namespace in which to install (Default: `kube-system`).
	Namespace pulumi.StringPtrInput
}

func (KubeproxyFreeState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeproxyFreeState)(nil)).Elem()
}

type kubeproxyFreeArgs struct {
	// Name of DaemonSet (Default: `kube-proxy`).
	Name *string `pulumi:"name"`
	// Namespace in which to install (Default: `kube-system`).
	Namespace *string `pulumi:"namespace"`
}

// The set of arguments for constructing a KubeproxyFree resource.
type KubeproxyFreeArgs struct {
	// Name of DaemonSet (Default: `kube-proxy`).
	Name pulumi.StringPtrInput
	// Namespace in which to install (Default: `kube-system`).
	Namespace pulumi.StringPtrInput
}

func (KubeproxyFreeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeproxyFreeArgs)(nil)).Elem()
}

type KubeproxyFreeInput interface {
	pulumi.Input

	ToKubeproxyFreeOutput() KubeproxyFreeOutput
	ToKubeproxyFreeOutputWithContext(ctx context.Context) KubeproxyFreeOutput
}

func (*KubeproxyFree) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeproxyFree)(nil)).Elem()
}

func (i *KubeproxyFree) ToKubeproxyFreeOutput() KubeproxyFreeOutput {
	return i.ToKubeproxyFreeOutputWithContext(context.Background())
}

func (i *KubeproxyFree) ToKubeproxyFreeOutputWithContext(ctx context.Context) KubeproxyFreeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeproxyFreeOutput)
}

// KubeproxyFreeArrayInput is an input type that accepts KubeproxyFreeArray and KubeproxyFreeArrayOutput values.
// You can construct a concrete instance of `KubeproxyFreeArrayInput` via:
//
//	KubeproxyFreeArray{ KubeproxyFreeArgs{...} }
type KubeproxyFreeArrayInput interface {
	pulumi.Input

	ToKubeproxyFreeArrayOutput() KubeproxyFreeArrayOutput
	ToKubeproxyFreeArrayOutputWithContext(context.Context) KubeproxyFreeArrayOutput
}

type KubeproxyFreeArray []KubeproxyFreeInput

func (KubeproxyFreeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubeproxyFree)(nil)).Elem()
}

func (i KubeproxyFreeArray) ToKubeproxyFreeArrayOutput() KubeproxyFreeArrayOutput {
	return i.ToKubeproxyFreeArrayOutputWithContext(context.Background())
}

func (i KubeproxyFreeArray) ToKubeproxyFreeArrayOutputWithContext(ctx context.Context) KubeproxyFreeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeproxyFreeArrayOutput)
}

// KubeproxyFreeMapInput is an input type that accepts KubeproxyFreeMap and KubeproxyFreeMapOutput values.
// You can construct a concrete instance of `KubeproxyFreeMapInput` via:
//
//	KubeproxyFreeMap{ "key": KubeproxyFreeArgs{...} }
type KubeproxyFreeMapInput interface {
	pulumi.Input

	ToKubeproxyFreeMapOutput() KubeproxyFreeMapOutput
	ToKubeproxyFreeMapOutputWithContext(context.Context) KubeproxyFreeMapOutput
}

type KubeproxyFreeMap map[string]KubeproxyFreeInput

func (KubeproxyFreeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubeproxyFree)(nil)).Elem()
}

func (i KubeproxyFreeMap) ToKubeproxyFreeMapOutput() KubeproxyFreeMapOutput {
	return i.ToKubeproxyFreeMapOutputWithContext(context.Background())
}

func (i KubeproxyFreeMap) ToKubeproxyFreeMapOutputWithContext(ctx context.Context) KubeproxyFreeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeproxyFreeMapOutput)
}

type KubeproxyFreeOutput struct{ *pulumi.OutputState }

func (KubeproxyFreeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeproxyFree)(nil)).Elem()
}

func (o KubeproxyFreeOutput) ToKubeproxyFreeOutput() KubeproxyFreeOutput {
	return o
}

func (o KubeproxyFreeOutput) ToKubeproxyFreeOutputWithContext(ctx context.Context) KubeproxyFreeOutput {
	return o
}

// Name of DaemonSet (Default: `kube-proxy`).
func (o KubeproxyFreeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KubeproxyFree) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Namespace in which to install (Default: `kube-system`).
func (o KubeproxyFreeOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *KubeproxyFree) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

type KubeproxyFreeArrayOutput struct{ *pulumi.OutputState }

func (KubeproxyFreeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubeproxyFree)(nil)).Elem()
}

func (o KubeproxyFreeArrayOutput) ToKubeproxyFreeArrayOutput() KubeproxyFreeArrayOutput {
	return o
}

func (o KubeproxyFreeArrayOutput) ToKubeproxyFreeArrayOutputWithContext(ctx context.Context) KubeproxyFreeArrayOutput {
	return o
}

func (o KubeproxyFreeArrayOutput) Index(i pulumi.IntInput) KubeproxyFreeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubeproxyFree {
		return vs[0].([]*KubeproxyFree)[vs[1].(int)]
	}).(KubeproxyFreeOutput)
}

type KubeproxyFreeMapOutput struct{ *pulumi.OutputState }

func (KubeproxyFreeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubeproxyFree)(nil)).Elem()
}

func (o KubeproxyFreeMapOutput) ToKubeproxyFreeMapOutput() KubeproxyFreeMapOutput {
	return o
}

func (o KubeproxyFreeMapOutput) ToKubeproxyFreeMapOutputWithContext(ctx context.Context) KubeproxyFreeMapOutput {
	return o
}

func (o KubeproxyFreeMapOutput) MapIndex(k pulumi.StringInput) KubeproxyFreeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubeproxyFree {
		return vs[0].(map[string]*KubeproxyFree)[vs[1].(string)]
	}).(KubeproxyFreeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubeproxyFreeInput)(nil)).Elem(), &KubeproxyFree{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeproxyFreeArrayInput)(nil)).Elem(), KubeproxyFreeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeproxyFreeMapInput)(nil)).Elem(), KubeproxyFreeMap{})
	pulumi.RegisterOutputType(KubeproxyFreeOutput{})
	pulumi.RegisterOutputType(KubeproxyFreeArrayOutput{})
	pulumi.RegisterOutputType(KubeproxyFreeMapOutput{})
}
